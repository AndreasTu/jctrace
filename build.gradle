plugins{
    id 'base'
    id 'jacoco'
    id 'com.github.spotbugs' version '5.0.14' apply false
    id 'com.github.ben-manes.versions' version '0.47.0'
    id "com.github.johnrengelman.shadow" version "8.1.1" apply false
    id "org.openjfx.javafxplugin" version "0.0.14" apply false
}

version = "1.0.0-SNAPSHOT"

subprojects{
    project.apply plugin: "java"
    project.apply plugin: "groovy"
    project.apply plugin: "publishing"
    //project.apply plugin: "com.github.spotbugs"

    group = "com.github.AndreasTu.jctrace"
    version = rootProject.version

    tasks.withType(JavaCompile).configureEach {
        //options.release.set(17)
        options.encoding = "UTF-8"
    }

    tasks.withType(Jar).configureEach {
        it.setPreserveFileTimestamps(false)
        it.setReproducibleFileOrder(true)
    }

    tasks.named("jar", Jar).configure {
        manifest {
            attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "Andreas Turban",
            )
        }
    }

    //Common Dependencies Configuration
    project.dependencies {
        compileOnly libs.googleFindbugsAnno
        compileOnly libs.spotBugsAnno

        testImplementation libs.groovy
        testImplementation(libs.spockCore) {
            exclude module: "groovy"
        }
        testImplementation libs.junit5Api
        testImplementation libs.assertJ
        testImplementation libs.guava

        testRuntimeOnly libs.junitPlatform
        testRuntimeOnly libs.junit5Impl
    }

    /*
    tasks.named("spotbugsTest").configure {
        //We do not execute spotbugs on test code
        enabled = false
    }
    */

    //Common test configuration
    tasks.withType(Test).configureEach{
        useJUnitPlatform()
        jvmArgs '-Xmx1124m'
    }
}

