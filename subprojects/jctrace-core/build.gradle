plugins {
    id "com.github.johnrengelman.shadow"
}

dependencies {
    // The production code uses the SLF4J logging API at compile time
    implementation libs.slf4j
    implementation libs.slf4jJdk

    implementation libs.bundles.asmAll
    implementation libs.gnuTrove

    //Currently not used in production
    implementation libs.disruptor
}


test {
    //jvmArgs '-XX:+UnlockCommercialFeatures'
    //jvmArgs '-XX:+FlightRecorder'
    //jvmArgs '-XX:StartFlightRecording=dumponexit=true,settings=profile.jfc,filename=d:/test.jfr'
}


shadowJar {
    dependencies {
        exclude(dependency(libs.disruptor.get()))
        exclude('module-info.class')
    }
    //ASM
    relocate 'org.objectweb.asm', 'de.turban.deadlock.tracer.dep.asm'

    //GNU Trove
    relocate 'gnu.trove', 'de.turban.deadlock.tracer.dep.gnu.trove'

    //slf4j
    relocate 'org/slf4j', 'de.turban.deadlock.tracer.dep.org.slf4j'


    from('../../LICENSES') {
        include '*.LICENSE'
        into('META-INF/LICENSES')
    }

    from('../../') {
        include 'LICENSE'
        into('META-INF')
    }
}

jar {
    from('../../LICENSES') {
        include '*.LICENSE'
        into('META-INF/LICENSES')
    }

    from('../../') {
        include 'LICENSE'
        into('META-INF')
    }

    manifest {

        attributes(
            'Can-Redefine-Classes': 'true',
            'Premain-Class': 'de.turban.deadlock.tracer.DeadlockTracerAgent'
        )
    }
}

apply from: 'runMeasurement.gradle'
